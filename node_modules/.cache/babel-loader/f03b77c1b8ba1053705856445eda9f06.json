{"ast":null,"code":"var _jsxFileName = \"D:\\\\TERAstio Desktop\\\\NoeticBlue Project\\\\scrollable-employee-table-inlineEdit\\\\Employees_table\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, Fragment } from 'react';\nimport axios from 'axios';\nimport ReadOnlyRow from './components/ReadOnlyRow/ReadOnlyRow';\nimport EditRow from './components/EditRow/EditRow';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [employees, setEmployees] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    user: {\n      name: \"\",\n      email: \"\",\n      title: \"\",\n      department: \"\"\n    },\n    status: \"\",\n    role: \"\"\n  });\n  const [editEmployeeName, setEditEmployeeName] = useState(null);\n  const [uniqueRoles, setUniqueRoles] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get('https://raw.githubusercontent.com/NoeticBlue/exercise-company-employees/main/employees.json');\n      setEmployees(request.data.records);\n\n      let foundUniqueRoles = _.keys(_.countBy(request.data.records, function (records) {\n        return records.role;\n      }));\n\n      setUniqueRoles(foundUniqueRoles);\n    }\n\n    fetchData();\n  }, []);\n\n  const handleEditClick = (event, employee) => {\n    event.preventDefault();\n    setEditEmployeeName(employee.user.name);\n    const formValues = {\n      user: {\n        name: employee.user.name,\n        email: employee.user.email,\n        title: employee.user.title,\n        department: employee.user.department\n      },\n      status: employee.status,\n      role: employee.role\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    let fieldName = event.target.getAttribute(\"name\");\n    let fieldValue = event.target.value;\n\n    if (fieldName === \"status\") {\n      if (fieldValue.toLowerCase() === \"active\") {\n        fieldValue = \"Inactive\";\n      } else {\n        fieldValue = \"Active\";\n      }\n    }\n\n    const newFormData = { ...editFormData\n    };\n    fieldName = String(fieldName);\n    let splitKey = fieldName.split(\".\");\n\n    if (splitKey.length > 1) {\n      newFormData[splitKey[0]][splitKey[1]] = fieldValue;\n    } else {\n      newFormData[fieldName] = fieldValue;\n    }\n\n    setEditFormData(newFormData);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const newEmployees = [...employees];\n    const index = employees.findIndex(employee => employee.user.name === editEmployeeName);\n    const editedEmployee = {\n      user: {\n        name: editFormData.user.name,\n        email: editFormData.user.email,\n        title: editFormData.user.title,\n        department: editFormData.user.department\n      },\n      status: editFormData.status,\n      role: editFormData.role\n    };\n    newEmployees[index] = editedEmployee;\n    setEmployees(newEmployees);\n    setEditEmployeeName(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container -my-2 py-2 min-w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-8 shadow border border-gray-300 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditFormSubmit,\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table-fixed min-w-full divide-y divide-gray-300\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-black flex-col text-white w-full min-w-full bg-gray-100 uppercase text-left text-gray-500 \",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"flex w-full \",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"w-1/3 font-medium pl-2\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"w-1/3 font-medium\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"w-1/12 font-medium text-center\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"w-2/12 font-medium text-center\",\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"col\",\n                className: \"w-1/12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            class: \"flex flex-col bg-white divide-y divide-gray-300 overflow-y-auto\",\n            style: {\n              height: 500\n            },\n            children: employees && employees.map(employee => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: editEmployeeName === employee.user.name ? /*#__PURE__*/_jsxDEV(EditRow, {\n                editFormData: editFormData,\n                handleEditFormChange: handleEditFormChange,\n                uniqueRoles: uniqueRoles\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n                employee: employee,\n                handleEditClick: handleEditClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, employee.user.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AtTO1Hw1XMyVByTOtGQHSDVVikA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/TERAstio Desktop/NoeticBlue Project/scrollable-employee-table-inlineEdit/Employees_table/src/App.js"],"names":["React","useState","useEffect","Fragment","axios","ReadOnlyRow","EditRow","_","App","employees","setEmployees","editFormData","setEditFormData","user","name","email","title","department","status","role","editEmployeeName","setEditEmployeeName","uniqueRoles","setUniqueRoles","fetchData","request","get","data","records","foundUniqueRoles","keys","countBy","handleEditClick","event","employee","preventDefault","formValues","handleEditFormChange","fieldName","target","getAttribute","fieldValue","value","toLowerCase","newFormData","String","splitKey","split","length","handleEditFormSubmit","newEmployees","index","findIndex","editedEmployee","height","map"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport React, {useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport ReadOnlyRow from './components/ReadOnlyRow/ReadOnlyRow';\r\nimport EditRow from './components/EditRow/EditRow';\r\nimport _ from 'lodash'\r\n\r\nfunction App() {\r\n\r\n  const [employees, setEmployees]= useState(null);\r\n  const [editFormData, setEditFormData] = useState({\r\n    user: {\r\n      name: \"\",\r\n      email: \"\",\r\n      title: \"\",\r\n      department: \"\"\r\n    },\r\n    status: \"\",\r\n    role: \"\"\r\n  })\r\n  const [editEmployeeName, setEditEmployeeName] = useState(null);\r\n  const [uniqueRoles, setUniqueRoles] = useState([]);\r\n  useEffect( () => {\r\n    async function fetchData (){\r\n      const request=await axios.get('https://raw.githubusercontent.com/NoeticBlue/exercise-company-employees/main/employees.json')\r\n        setEmployees(request.data.records)\r\n        let foundUniqueRoles = _.keys(_.countBy(request.data.records, function(records) { return records.role; }));\r\n        setUniqueRoles(foundUniqueRoles)\r\n      }\r\n    fetchData()\r\n  }, []);\r\n\r\n  const handleEditClick = (event, employee) => {\r\n    event.preventDefault()\r\n    setEditEmployeeName(employee.user.name)\r\n\r\n    const formValues = {\r\n      user: {\r\n        name: employee.user.name,\r\n        email: employee.user.email,\r\n        title: employee.user.title,\r\n        department: employee.user.department\r\n      },\r\n      status: employee.status,\r\n      role: employee.role\r\n    }\r\n    setEditFormData(formValues)\r\n  }\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault()\r\n    let fieldName = event.target.getAttribute(\"name\")\r\n    let fieldValue = event.target.value\r\n    if (fieldName === \"status\"){\r\n      if (fieldValue.toLowerCase() === \"active\"){\r\n        fieldValue = \"Inactive\"\r\n      }else{\r\n        fieldValue = \"Active\"\r\n      }\r\n    }\r\n    const newFormData = {...editFormData}\r\n    \r\n    \r\n    fieldName = String(fieldName)\r\n    let splitKey = fieldName.split(\".\")\r\n    if(splitKey.length > 1){\r\n      newFormData[splitKey[0]][splitKey[1]] = fieldValue \r\n    }else{\r\n      newFormData[fieldName] = fieldValue\r\n    }\r\n    setEditFormData(newFormData)\r\n  }\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newEmployees = [...employees]\r\n    const index = employees.findIndex((employee) => employee.user.name === editEmployeeName)\r\n    const editedEmployee={\r\n      user:{\r\n        name: editFormData.user.name,\r\n        email: editFormData.user.email,\r\n        title: editFormData.user.title,\r\n        department: editFormData.user.department,\r\n      },\r\n      status: editFormData.status, \r\n      role : editFormData.role\r\n    }\r\n\r\n    newEmployees[index] = editedEmployee\r\n    setEmployees(newEmployees)\r\n    setEditEmployeeName(null)\r\n  }\r\n\r\n  return (\r\n    <div class=\"container -my-2 py-2 min-w-full\">\r\n      <div className=\"m-8 shadow border border-gray-300 rounded-lg\">\r\n        <form onSubmit={handleEditFormSubmit} className=''> \r\n          <table className=\"table-fixed min-w-full divide-y divide-gray-300\">\r\n            <thead className=\"bg-black flex-col text-white w-full min-w-full bg-gray-100 uppercase text-left text-gray-500 \">\r\n              <tr className=\"flex w-full \">\r\n                <th scope='col' className='w-1/3 font-medium pl-2'>Name</th>\r\n                <th scope='col' className='w-1/3 font-medium'>Title</th>\r\n                <th scope='col' className='w-1/12 font-medium text-center'>Status</th>\r\n                <th scope='col' className='w-2/12 font-medium text-center'>Role</th>\r\n                <th scope='col' className='w-1/12'></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"flex flex-col bg-white divide-y divide-gray-300 overflow-y-auto\" style={{height: 500}}>\r\n              {employees && employees.map( (employee) => (\r\n                <Fragment key={employee.user.name}>\r\n                  {editEmployeeName === employee.user.name?(\r\n                    <EditRow editFormData={editFormData} handleEditFormChange={handleEditFormChange} uniqueRoles={uniqueRoles}/>\r\n                  ):(\r\n                    <ReadOnlyRow employee={employee} handleEditClick={handleEditClick}/>\r\n                  )} \r\n                </Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          </form> \r\n      </div>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}