{"version":3,"sources":["assets/image.jpg","components/ReadOnlyRow/ReadOnlyRow.js","components/EditRow/EditRow.js","App.js","reportWebVitals.js","index.js"],"names":["ReadOnlyRow","employee","handleEditClick","className","src","profile_image","alt","user","name","email","title","department","status","toLowerCase","toUpperCase","substring","value","role","readOnly","type","onClick","event","EditRow","editFormData","handleEditFormChange","uniqueRoles","required","placeholder","onChange","map","App","useState","employees","setEmployees","setEditFormData","editEmployeeName","setEditEmployeeName","setUniqueRoles","useEffect","a","axios","get","request","data","records","foundUniqueRoles","_","keys","countBy","fetchData","preventDefault","formValues","fieldName","target","getAttribute","fieldValue","newFormData","splitKey","String","split","length","class","onSubmit","newEmployees","index","findIndex","editedEmployee","scope","style","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38fd227.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image.dc741baf.jpg\";","import React from 'react';\r\nimport profile_image from '../../assets/image.jpg'\r\n\r\nconst ReadOnlyRow = ({employee, handleEditClick}) => (\r\n  <tr key={employee.user.name} className='flex w-full items-center'>\r\n    <td className='pl-2 py-6 w-1/3 whitespace-nowrap'>\r\n      <div className='flex items-center'>\r\n        <div className=\"flex-shrink-0 h-10 w-10\">\r\n          <img className=\"h-10 w-10 rounded-full\" src={profile_image} alt=''/>\r\n        </div>\r\n        <div className='pl-2'>\r\n          <div className='font-medium text-gray-800'>{employee.user.name}</div>\r\n          <div className=\"text-gray-500\">{employee.user.email}</div>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td className=\"pl-1 py-6 w-1/3 whitespace-nowrap\">\r\n      <div className='font-medium text-gray-800  border-2 border-transparent'>{employee.user.title}</div>\r\n      <div className=\"text-gray-500 border-2 border-transparent \">{employee.user.department}</div>\r\n    </td>\r\n    <td className=\"md:pl-4  sm:pl-4 lg:pl-6 py-6 w-1/12 text-center whitespace-nowrap\">\r\n      {employee.status.toLowerCase() === 'active'? \r\n        (<span className='px-2 bg-green-200 rounded-full font-semibold text-gray-800'>\r\n          {employee.status[0].toUpperCase() + employee.status.substring(1)}\r\n        </span>\r\n        ):( \r\n        <span className='px-2 bg-red-200 rounded-full font-semibold text-gray-800'>\r\n          {employee.status[0].toUpperCase() + employee.status.substring(1)}\r\n        </span>\r\n        )\r\n      }\r\n    </td>\r\n    <td className=\"pl-8 py-6 w-2/12  text-center whitespace-nowrap text-gray-500\">\r\n      <select className='appearance-none' name=\"role\" value={employee.role} readOnly>\r\n        <option value={employee.role}>{employee.role}</option>\r\n      </select>\r\n    </td>\r\n    <td className='py-6 w-1/12 text-right pr-4 whitespace-nowrap'><button  type=\"button\" className='font-medium text-purple-500 hover:text-purple-900'\r\n        onClick={(event)=>handleEditClick(event,employee)}>\r\n          Edit\r\n        </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default ReadOnlyRow;\r\n","import React from 'react';\r\nimport profile_image from '../../assets/image.jpg'\r\n\r\nconst EditRow = ({editFormData, handleEditFormChange, uniqueRoles}) => (\r\n  <tr className='flex w-full items-center'>\r\n    <td className='pl-2 py-6 w-1/3  whitespace-nowrap'>\r\n      <div className='flex items-center'>\r\n        <div className=\"flex-shrink-0 h-10 w-10\">\r\n          <img className=\"h-10 w-10 rounded-full\" src={profile_image} alt=''/>\r\n        </div>\r\n        <div className='pl-2'>\r\n          <div className='font-medium text-gray-800'>{editFormData.user.name}</div>\r\n          <div className=\"text-gray-500\">{editFormData.user.email}</div>\r\n        </div>\r\n      </div>\r\n    </td>\r\n    <td className=\"pl-1 py-6 w-1/3 whitespace-nowrap\">\r\n      <div>\r\n        <input className=\"w-full border-2 border-blue-200 rounded-lg focus:border-blue-400 focus:outline-none font-medium text-gray-800\"\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter title...\"\r\n          name=\"user.title\"\r\n          value={editFormData.user.title}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </div> \r\n      <div>\r\n        <input className=\"w-full border-2 border-blue-200 rounded-lg focus:border-blue-400 focus:outline-none  text-gray-500\"\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter department...\"\r\n          name=\"user.department\"\r\n          value={editFormData.user.department}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </div>\r\n    </td>\r\n    <td className=\"md:pl-4  sm:pl-4 lg:pl-6 py-6 w-1/12 text-center whitespace-nowrap\">\r\n      {editFormData.status.toLowerCase() === 'active'? \r\n        (<input className='px-2 bg-green-200 rounded-full font-semibold text-gray-800 hover:bg-green-400 cursor-pointer'\r\n          type=\"button\"\r\n          name=\"status\"\r\n          value={editFormData.status[0].toUpperCase()+editFormData.status.substring(1)}\r\n          onClick={handleEditFormChange}\r\n          ></input>\r\n        ):(\r\n          <input className='px-2 bg-red-200 rounded-full font-semibold text-gray-800 hover:bg-red-400 cursor-pointer'\r\n          type=\"button\"\r\n          name=\"status\"\r\n          value={editFormData.status[0].toUpperCase()+editFormData.status.substring(1)}\r\n          onClick={handleEditFormChange}\r\n          ></input>\r\n        )}\r\n    </td>\r\n    <td className=\"pl-8 py-6 w-2/12  text-center  whitespace-nowrap text-gray-500\">\r\n      <select className='' name=\"role\" value={editFormData.role} onChange={handleEditFormChange}>\r\n        {uniqueRoles.map((role)=>(\r\n          <option key={role} value={role}>{role}</option>\r\n        ))}\r\n      </select>\r\n    </td>\r\n    <td className='py-6 w-1/12 text-right pr-4 whitespace-nowrap'>\r\n      <button className='font-medium text-blue-500 hover:text-blue-900' type=\"submit\">Save</button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default EditRow;\r\n","import './App.css';\r\nimport React, {useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport ReadOnlyRow from './components/ReadOnlyRow/ReadOnlyRow';\r\nimport EditRow from './components/EditRow/EditRow';\r\nimport _ from 'lodash'\r\n\r\nfunction App() {\r\n\r\n  const [employees, setEmployees]= useState(null);\r\n  const [editFormData, setEditFormData] = useState({\r\n    user: {\r\n      name: \"\",\r\n      email: \"\",\r\n      title: \"\",\r\n      department: \"\"\r\n    },\r\n    status: \"\",\r\n    role: \"\"\r\n  })\r\n  const [editEmployeeName, setEditEmployeeName] = useState(null);\r\n  const [uniqueRoles, setUniqueRoles] = useState([]);\r\n  useEffect( () => {\r\n    async function fetchData (){\r\n      const request=await axios.get('https://raw.githubusercontent.com/NoeticBlue/exercise-company-employees/main/employees.json')\r\n        setEmployees(request.data.records)\r\n        let foundUniqueRoles = _.keys(_.countBy(request.data.records, function(records) { return records.role; }));\r\n        setUniqueRoles(foundUniqueRoles)\r\n      }\r\n    fetchData()\r\n  }, []);\r\n\r\n  const handleEditClick = (event, employee) => {\r\n    event.preventDefault()\r\n    setEditEmployeeName(employee.user.name)\r\n\r\n    const formValues = {\r\n      user: {\r\n        name: employee.user.name,\r\n        email: employee.user.email,\r\n        title: employee.user.title,\r\n        department: employee.user.department\r\n      },\r\n      status: employee.status,\r\n      role: employee.role\r\n    }\r\n    setEditFormData(formValues)\r\n  }\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault()\r\n    let fieldName = event.target.getAttribute(\"name\")\r\n    let fieldValue = event.target.value\r\n    if (fieldName === \"status\"){\r\n      if (fieldValue.toLowerCase() === \"active\"){\r\n        fieldValue = \"Inactive\"\r\n      }else{\r\n        fieldValue = \"Active\"\r\n      }\r\n    }\r\n    const newFormData = {...editFormData}\r\n    \r\n    \r\n    fieldName = String(fieldName)\r\n    let splitKey = fieldName.split(\".\")\r\n    if(splitKey.length > 1){\r\n      newFormData[splitKey[0]][splitKey[1]] = fieldValue \r\n    }else{\r\n      newFormData[fieldName] = fieldValue\r\n    }\r\n    setEditFormData(newFormData)\r\n  }\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newEmployees = [...employees]\r\n    const index = employees.findIndex((employee) => employee.user.name === editEmployeeName)\r\n    const editedEmployee={\r\n      user:{\r\n        name: editFormData.user.name,\r\n        email: editFormData.user.email,\r\n        title: editFormData.user.title,\r\n        department: editFormData.user.department,\r\n      },\r\n      status: editFormData.status, \r\n      role : editFormData.role\r\n    }\r\n\r\n    newEmployees[index] = editedEmployee\r\n    setEmployees(newEmployees)\r\n    setEditEmployeeName(null)\r\n  }\r\n\r\n  return (\r\n    <div class=\"container -my-2 py-2 min-w-full\">\r\n      <div className=\"m-8 shadow border border-gray-300 rounded-lg\">\r\n        <form onSubmit={handleEditFormSubmit} className=''> \r\n          <table className=\"table-fixed min-w-full divide-y divide-gray-300\">\r\n            <thead className=\"bg-black flex-col text-white w-full min-w-full bg-gray-100 uppercase text-left text-gray-500 \">\r\n              <tr className=\"flex w-full \">\r\n                <th scope='col' className='w-1/3 font-medium pl-2'>Name</th>\r\n                <th scope='col' className='w-1/3 font-medium'>Title</th>\r\n                <th scope='col' className='w-1/12 font-medium text-center'>Status</th>\r\n                <th scope='col' className='w-2/12 font-medium text-center'>Role</th>\r\n                <th scope='col' className='w-1/12'></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class=\"flex flex-col bg-white divide-y divide-gray-300 overflow-y-auto\" style={{height: 500}}>\r\n              {employees && employees.map( (employee) => (\r\n                <Fragment key={employee.user.name}>\r\n                  {editEmployeeName === employee.user.name?(\r\n                    <EditRow editFormData={editFormData} handleEditFormChange={handleEditFormChange} uniqueRoles={uniqueRoles}/>\r\n                  ):(\r\n                    <ReadOnlyRow employee={employee} handleEditClick={handleEditClick}/>\r\n                  )} \r\n                </Fragment>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          </form> \r\n      </div>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}